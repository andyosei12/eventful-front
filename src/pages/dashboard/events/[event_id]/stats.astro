---
export const prerender = false;
import EventStats from '../../../../components/EventStats.astro';
import Chart from '../../../../components/Chart';
import DashbordLayout from '../../../../layouts/DashbordLayout.astro';

const { event_id } = Astro.params;

// check if user is logged in
if (!Astro.cookies.get('token')) {
  return Astro.redirect('/');
}

const totalEvents = await fetch(
  `${import.meta.env.PUBLIC_API_URL}/analytics/events/total`,
  {
    headers: {
      Authorization: `Bearer ${Astro.cookies.get('token')?.value}`,
    },
  }
).then((res) => res.json());

const totalEventees = await fetch(
  `${import.meta.env.PUBLIC_API_URL}/analytics/${event_id}/tickets_sold`,
  {
    headers: {
      Authorization: `Bearer ${Astro.cookies.get('token')?.value}`,
    },
  }
).then((res) => res.json());

const totalAttendees = await fetch(
  `${import.meta.env.PUBLIC_API_URL}/analytics/${event_id}/tickets/completed`,
  {
    headers: {
      Authorization: `Bearer ${Astro.cookies.get('token')?.value}`,
    },
  }
).then((res) => res.json());

const revenue = await fetch(
  `${import.meta.env.PUBLIC_API_URL}/analytics/${event_id}/revenue`,
  {
    headers: {
      Authorization: `Bearer ${Astro.cookies.get('token')?.value}`,
    },
  }
).then((res) => res.json());

const event = await fetch(
  `${import.meta.env.PUBLIC_API_URL}/events/${event_id}`
).then((res) => res.json());
---

<DashbordLayout>
  <div class="pb-6 px-6">
    <dh-component>
      <div class="container pt-6">
        <div class="flex flex-wrap">
          <div class="w-full">
            <div class="rounded">
              <EventStats
                name={event.title}
                eventees={totalEventees}
                attendees={totalAttendees}
                revenue={revenue[0]?.total || 0}
              />
            </div>
          </div>
        </div>
      </div>
      <div class="container pt-12">
        <div class="flex flex-wrap">
          {
            totalEventees !== 0 && (
              <div class="md:w-2/3 w-full pb-6 md:pb-0 md:pr-6">
                <div class="rounded h-80">
                  <Chart
                    eventees={totalEventees}
                    attendees={totalAttendees}
                    client:only="react"
                  />
                </div>
              </div>
            )
          }

          <div class="md:w-1/3 w-full">
          
           
          </div>
        </div>
      </div>
    </dh-component>
  </div>
</DashbordLayout>
